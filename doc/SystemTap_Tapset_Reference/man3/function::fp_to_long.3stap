'\" t
.\"     Title: function::fp_to_long
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: November 2024
.\"    Manual: Floating point processing Tapset
.\"    Source: SystemTap Tapset Reference
.\"  Language: English
.\"
.TH "FUNCTION::FP_TO_LONG" "3stap" "November 2024" "SystemTap Tapset Reference" "Floating point processing Taps"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
function::fp_to_long \- Convert fp to int64
.SH "SYNOPSIS"
.sp
.nf
    fp_to_long:long(infp:long,roundingMode:long,exact:long)
.fi
.SH "ARGUMENTS"
.PP
\fIinfp\fR
.RS 4
the 64 bit floating point stored in long
.RE
.PP
\fIroundingMode\fR
.RS 4
through 0\-6, which are round to nearest even, minMag, min, max, near maxMag and round to odd
.RE
.PP
\fIexact\fR
.RS 4
the boolean value, if exact is 1 than raising inexact exception, otherwise ignore the exception\&.
.RE
.SH "DESCRIPTION"
.PP
Given a 64 bit floating point, which is stored in long, use the long value to initiate self\-defined float64_t type, then apply the f64_to_i64 function to get the string representation\&.
.SH SEE ALSO\n 
.IR tapset::floatingpoint (3stap)
